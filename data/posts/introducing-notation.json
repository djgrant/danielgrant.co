{
  "slug": "introducing-notation",
  "title": "Introducing Notation",
  "date": "2023-07-03",
  "status": "Published",
  "content": "<p>This weekend I launched a sneak peek of a project I’ve been working on.</p>\n<p><a href=\"https://notation.dev/\">Notation</a> reads your TypeScript application code, detects the cloud services you need, and generates a ready-to-deploy cloud architecture. It frees developers from worrying about infrastructure, and lets them focus on building useful software.</p>\n<p>The idea emerged a couple of years ago while I was building an analytics engine. I had chosen a monolithic tech stack, based around Postgres. This enabled rapid development, but as the product started growing, so did the list of scaling issues.</p>\n<p>I’ve always been reluctant to start greenfield projects with a serverless or microservices architecture, and refactoring that analytics project reminded why: there are major overheads developing cloud-native software. This is partly because distributed systems are more complex, but also because the developer experience of cloud platforms is sub-par.</p>\n<figure class=\"\"><img src=\"/images/pages/69e19f14-2682-485d-a9e5-077ff154a3ec/you-went-straight-to-the-dark.png\" alt=\"Choosing microservices for greenfield projects is rarely the right choice\"><figcaption>Choosing microservices for greenfield projects is rarely the right choice</figcaption></figure>\n<p>So, a proposition was conceived: make developing cloud-native software as productive (and fun) as developing a monolith.</p>\n<p>Notation will be released as an open source project. There are lots of interesting challenges ahead, and I’m looking forward to working through them with the developer community.</p>\n<p>If this sounds interesting to you, <a href=\"https://notation.dev/#sign-up\">join the wait list</a>. And, if you have any questions or feedback, drop me a message!</p>"
}
